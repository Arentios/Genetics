package com.arentios.gene.genesequence;

import org.junit.Test;

import com.arentios.gene.domain.Sequence;
import com.arentios.gene.domain.SequenceAlignment;
import com.arentios.gene.domain.SubstitutionMatrix;
import com.arentios.gene.sequence.NeedlemanWunsch;
import com.arentios.gene.sequence.SmithWaterman;
import com.arentios.gene.service.AlignmentSystemTools;

import static org.junit.Assert.*;


import java.util.ArrayList;




/**
 * Unit test for sequence alignment algorithms.
 */

public class AlignmentTest 
{



	@Test
	public void testNeedlemanWunschBranching()
	{
		Sequence firstSequence = new Sequence("gcggcaggcttaacacatgcaagtcgaggggtatatgtcttcggata");
		Sequence secondSequence = new Sequence("gcggcgtgcttaacacatgcaagtcgaacgatgacccggtgcttgca");	
		try{
			ArrayList<SequenceAlignment> sequencedGenes = NeedlemanWunsch.sequence(firstSequence, secondSequence, TestConstants.NEEDLEMAN_WUNSCH_MATCH_DEFAULT, TestConstants.NEEDLEMAN_WUNSCH_MISMATCH_DEFAULT, TestConstants.NEEDLEMAN_WUNSCH_GAP_OPEN_DEFAULT, TestConstants.NEEDLEMAN_WUNSCH_GAP_EXTEND_DEFAULT, false, null);
			ArrayList<SequenceAlignment> testAlignment = new ArrayList<SequenceAlignment>();
			ArrayList<Sequence> testSequences = new ArrayList<Sequence>();
			testSequences.add(new Sequence("gcggcaggcttaacacatgcaagtcgaggggt-a-tatgt-cttcggata"));
			testSequences.add(new Sequence("gcggcgtgcttaacacatgcaagtcgaacgatgacccggtgctt--g-ca"));
			testAlignment.add(new SequenceAlignment(testSequences));
			assertTrue(sequencedGenes != null && (sequencedGenes.size() == testAlignment.size()));
			for(int i=0;i<sequencedGenes.size();i++){
				assertTrue( sequencedGenes.get(i).equals(testAlignment.get(i)) );
			}
		}catch(Exception e){
			assertTrue(false);
		}

	}

	@Test
	public void testNeedlemanWunschSingle()
	{
		Sequence firstSequence = new Sequence("gcggcaggcttaacacatgcaagtcgaggggtatatgtcttcggata");
		Sequence secondSequence = new Sequence("gcggcgtgcttaacacatgcaagtcgaacgatgacccggtgcttgca");	
		try{
			ArrayList<SequenceAlignment> sequencedGenes = NeedlemanWunsch.sequence(firstSequence, secondSequence, TestConstants.NEEDLEMAN_WUNSCH_MATCH_DEFAULT, TestConstants.NEEDLEMAN_WUNSCH_MISMATCH_DEFAULT, TestConstants.NEEDLEMAN_WUNSCH_GAP_OPEN_DEFAULT, TestConstants.NEEDLEMAN_WUNSCH_GAP_EXTEND_DEFAULT, true, null);
			ArrayList<SequenceAlignment> testAlignment = new ArrayList<SequenceAlignment>();
			ArrayList<Sequence> testSequences = new ArrayList<Sequence>();
			testSequences.add(new Sequence("gcggcaggcttaacacatgcaagtcgaggggt-a-tatgt-cttcggata"));
			testSequences.add(new Sequence("gcggcgtgcttaacacatgcaagtcgaacgatgacccggtgctt--g-ca"));
			testAlignment.add(new SequenceAlignment(testSequences));
			assertTrue(sequencedGenes != null && (sequencedGenes.size() == testAlignment.size()));
			for(int i=0;i<sequencedGenes.size();i++){
				assertTrue( sequencedGenes.get(i).equals(testAlignment.get(i)) );
			}
		}catch(Exception e){
			assertTrue(false);
		}

	}
	@Test
	public void testSmithWaterman(){
		Sequence firstSequence = new Sequence("gcggcaggcttaacacatgcaagtcgaggggtatatgtcttcggata");
		Sequence secondSequence = new Sequence("gcggcgtgcttaacacatgcaagtcgaacgatgacccggtgcttgca");
		ArrayList<SequenceAlignment> sequencedGenes = SmithWaterman.sequence(firstSequence, secondSequence, TestConstants.SMITH_WATERMAN_MATCH_DEFAULT, TestConstants.SMITH_WATERMAN_INDEL_DEFAULT, TestConstants.SMITH_WATERMAN_MISMATCH_DEFAULT);
		ArrayList<SequenceAlignment> testAlignment = new ArrayList<SequenceAlignment>();
		ArrayList<Sequence> testSequences = new ArrayList<Sequence>();
		testSequences.add(new Sequence("gcggcag-gcttaacacatgcaagtcgaggggtat-a---tgt-cttcgga"));
		testSequences.add(new Sequence("gcggc-gtgcttaacacatgcaagtcga-acg-atgacccggtgctt-gca"));
		testAlignment.add(new SequenceAlignment(testSequences));
		assertTrue(sequencedGenes != null && (sequencedGenes.size() == testAlignment.size()));
		for(int i=0;i<sequencedGenes.size();i++){
			assertTrue( sequencedGenes.get(i).equals(testAlignment.get(i)) );
		}
	}

	@Test
	public void testLoadScoringMatrix(){
		SubstitutionMatrix matrix = AlignmentSystemTools.loadSubstitutionMatrix("pam250.xml");
		
		try{
			assertTrue(matrix.lookupSubstitutionValue('V', 'N') == -2);
		}catch(Exception e){
			assertTrue(false);
		}
	}

	@Test
	public void testSaveScoringMatrix(){
		SubstitutionMatrix matrix = new SubstitutionMatrix();
		matrix.addSubstitutionMatrixValue('A','A',4);
		matrix.addSubstitutionMatrixValue('R','A',-1);
		matrix.addSubstitutionMatrixValue('N','A',-2);
		matrix.addSubstitutionMatrixValue('D','A',-2);
		matrix.addSubstitutionMatrixValue('C','A',0);
		matrix.addSubstitutionMatrixValue('Q','A',-1);
		matrix.addSubstitutionMatrixValue('E','A',-1);
		matrix.addSubstitutionMatrixValue('G','A',0);
		matrix.addSubstitutionMatrixValue('H','A',-2);
		matrix.addSubstitutionMatrixValue('I','A',-1);
		matrix.addSubstitutionMatrixValue('L','A',-1);
		matrix.addSubstitutionMatrixValue('K','A',-1);
		matrix.addSubstitutionMatrixValue('M','A',-1);
		matrix.addSubstitutionMatrixValue('F','A',-2);
		matrix.addSubstitutionMatrixValue('P','A',-1);
		matrix.addSubstitutionMatrixValue('S','A',1);
		matrix.addSubstitutionMatrixValue('T','A',0);
		matrix.addSubstitutionMatrixValue('W','A',-3);
		matrix.addSubstitutionMatrixValue('Y','A',-2);
		matrix.addSubstitutionMatrixValue('V','A',0);
		matrix.addSubstitutionMatrixValue('B','A',-2);
		matrix.addSubstitutionMatrixValue('Z','A',-1);
		matrix.addSubstitutionMatrixValue('X','A',0);
		matrix.addSubstitutionMatrixValue('*','A',-4);
		matrix.addSubstitutionMatrixValue('A','R',-1);
		matrix.addSubstitutionMatrixValue('R','R',5);
		matrix.addSubstitutionMatrixValue('N','R',0);
		matrix.addSubstitutionMatrixValue('D','R',-2);
		matrix.addSubstitutionMatrixValue('C','R',-3);
		matrix.addSubstitutionMatrixValue('Q','R',1);
		matrix.addSubstitutionMatrixValue('E','R',0);
		matrix.addSubstitutionMatrixValue('G','R',-2);
		matrix.addSubstitutionMatrixValue('H','R',0);
		matrix.addSubstitutionMatrixValue('I','R',-3);
		matrix.addSubstitutionMatrixValue('L','R',-2);
		matrix.addSubstitutionMatrixValue('K','R',2);
		matrix.addSubstitutionMatrixValue('M','R',-1);
		matrix.addSubstitutionMatrixValue('F','R',-3);
		matrix.addSubstitutionMatrixValue('P','R',-2);
		matrix.addSubstitutionMatrixValue('S','R',-1);
		matrix.addSubstitutionMatrixValue('T','R',-1);
		matrix.addSubstitutionMatrixValue('W','R',-3);
		matrix.addSubstitutionMatrixValue('Y','R',-2);
		matrix.addSubstitutionMatrixValue('V','R',-3);
		matrix.addSubstitutionMatrixValue('B','R',-1);
		matrix.addSubstitutionMatrixValue('Z','R',0);
		matrix.addSubstitutionMatrixValue('X','R',-1);
		matrix.addSubstitutionMatrixValue('*','R',-4);
		matrix.addSubstitutionMatrixValue('A','N',-2);
		matrix.addSubstitutionMatrixValue('R','N',0);
		matrix.addSubstitutionMatrixValue('N','N',6);
		matrix.addSubstitutionMatrixValue('D','N',1);
		matrix.addSubstitutionMatrixValue('C','N',-3);
		matrix.addSubstitutionMatrixValue('Q','N',0);
		matrix.addSubstitutionMatrixValue('E','N',0);
		matrix.addSubstitutionMatrixValue('G','N',0);
		matrix.addSubstitutionMatrixValue('H','N',1);
		matrix.addSubstitutionMatrixValue('I','N',-3);
		matrix.addSubstitutionMatrixValue('L','N',-3);
		matrix.addSubstitutionMatrixValue('K','N',0);
		matrix.addSubstitutionMatrixValue('M','N',-2);
		matrix.addSubstitutionMatrixValue('F','N',-3);
		matrix.addSubstitutionMatrixValue('P','N',-2);
		matrix.addSubstitutionMatrixValue('S','N',1);
		matrix.addSubstitutionMatrixValue('T','N',0);
		matrix.addSubstitutionMatrixValue('W','N',-4);
		matrix.addSubstitutionMatrixValue('Y','N',-2);
		matrix.addSubstitutionMatrixValue('V','N',-3);
		matrix.addSubstitutionMatrixValue('B','N',3);
		matrix.addSubstitutionMatrixValue('Z','N',0);
		matrix.addSubstitutionMatrixValue('X','N',-1);
		matrix.addSubstitutionMatrixValue('*','N',-4);
		matrix.addSubstitutionMatrixValue('A','D',-2);
		matrix.addSubstitutionMatrixValue('R','D',-2);
		matrix.addSubstitutionMatrixValue('N','D',1);
		matrix.addSubstitutionMatrixValue('D','D',6);
		matrix.addSubstitutionMatrixValue('C','D',-3);
		matrix.addSubstitutionMatrixValue('Q','D',0);
		matrix.addSubstitutionMatrixValue('E','D',2);
		matrix.addSubstitutionMatrixValue('G','D',-1);
		matrix.addSubstitutionMatrixValue('H','D',-1);
		matrix.addSubstitutionMatrixValue('I','D',-3);
		matrix.addSubstitutionMatrixValue('L','D',-4);
		matrix.addSubstitutionMatrixValue('K','D',-1);
		matrix.addSubstitutionMatrixValue('M','D',-3);
		matrix.addSubstitutionMatrixValue('F','D',-3);
		matrix.addSubstitutionMatrixValue('P','D',-1);
		matrix.addSubstitutionMatrixValue('S','D',0);
		matrix.addSubstitutionMatrixValue('T','D',-1);
		matrix.addSubstitutionMatrixValue('W','D',-4);
		matrix.addSubstitutionMatrixValue('Y','D',-3);
		matrix.addSubstitutionMatrixValue('V','D',-3);
		matrix.addSubstitutionMatrixValue('B','D',4);
		matrix.addSubstitutionMatrixValue('Z','D',1);
		matrix.addSubstitutionMatrixValue('X','D',-1);
		matrix.addSubstitutionMatrixValue('*','D',-4);
		matrix.addSubstitutionMatrixValue('A','C',0);
		matrix.addSubstitutionMatrixValue('R','C',-3);
		matrix.addSubstitutionMatrixValue('N','C',-3);
		matrix.addSubstitutionMatrixValue('D','C',-3);
		matrix.addSubstitutionMatrixValue('C','C',9);
		matrix.addSubstitutionMatrixValue('Q','C',-3);
		matrix.addSubstitutionMatrixValue('E','C',-4);
		matrix.addSubstitutionMatrixValue('G','C',-3);
		matrix.addSubstitutionMatrixValue('H','C',-3);
		matrix.addSubstitutionMatrixValue('I','C',-1);
		matrix.addSubstitutionMatrixValue('L','C',-1);
		matrix.addSubstitutionMatrixValue('K','C',-3);
		matrix.addSubstitutionMatrixValue('M','C',-1);
		matrix.addSubstitutionMatrixValue('F','C',-2);
		matrix.addSubstitutionMatrixValue('P','C',-3);
		matrix.addSubstitutionMatrixValue('S','C',-1);
		matrix.addSubstitutionMatrixValue('T','C',-1);
		matrix.addSubstitutionMatrixValue('W','C',-2);
		matrix.addSubstitutionMatrixValue('Y','C',-2);
		matrix.addSubstitutionMatrixValue('V','C',-1);
		matrix.addSubstitutionMatrixValue('B','C',-3);
		matrix.addSubstitutionMatrixValue('Z','C',-3);
		matrix.addSubstitutionMatrixValue('X','C',-2);
		matrix.addSubstitutionMatrixValue('*','C',-4);
		matrix.addSubstitutionMatrixValue('A','Q',-1);
		matrix.addSubstitutionMatrixValue('R','Q',1);
		matrix.addSubstitutionMatrixValue('N','Q',0);
		matrix.addSubstitutionMatrixValue('D','Q',0);
		matrix.addSubstitutionMatrixValue('C','Q',-3);
		matrix.addSubstitutionMatrixValue('Q','Q',5);
		matrix.addSubstitutionMatrixValue('E','Q',2);
		matrix.addSubstitutionMatrixValue('G','Q',-2);
		matrix.addSubstitutionMatrixValue('H','Q',0);
		matrix.addSubstitutionMatrixValue('I','Q',-3);
		matrix.addSubstitutionMatrixValue('L','Q',-2);
		matrix.addSubstitutionMatrixValue('K','Q',1);
		matrix.addSubstitutionMatrixValue('M','Q',0);
		matrix.addSubstitutionMatrixValue('F','Q',-3);
		matrix.addSubstitutionMatrixValue('P','Q',-1);
		matrix.addSubstitutionMatrixValue('S','Q',0);
		matrix.addSubstitutionMatrixValue('T','Q',-1);
		matrix.addSubstitutionMatrixValue('W','Q',-2);
		matrix.addSubstitutionMatrixValue('Y','Q',-1);
		matrix.addSubstitutionMatrixValue('V','Q',-2);
		matrix.addSubstitutionMatrixValue('B','Q',0);
		matrix.addSubstitutionMatrixValue('Z','Q',3);
		matrix.addSubstitutionMatrixValue('X','Q',-1);
		matrix.addSubstitutionMatrixValue('*','Q',-4);
		matrix.addSubstitutionMatrixValue('A','E',-1);
		matrix.addSubstitutionMatrixValue('R','E',0);
		matrix.addSubstitutionMatrixValue('N','E',0);
		matrix.addSubstitutionMatrixValue('D','E',2);
		matrix.addSubstitutionMatrixValue('C','E',-4);
		matrix.addSubstitutionMatrixValue('Q','E',2);
		matrix.addSubstitutionMatrixValue('E','E',5);
		matrix.addSubstitutionMatrixValue('G','E',-2);
		matrix.addSubstitutionMatrixValue('H','E',0);
		matrix.addSubstitutionMatrixValue('I','E',-3);
		matrix.addSubstitutionMatrixValue('L','E',-3);
		matrix.addSubstitutionMatrixValue('K','E',1);
		matrix.addSubstitutionMatrixValue('M','E',-2);
		matrix.addSubstitutionMatrixValue('F','E',-3);
		matrix.addSubstitutionMatrixValue('P','E',-1);
		matrix.addSubstitutionMatrixValue('S','E',0);
		matrix.addSubstitutionMatrixValue('T','E',-1);
		matrix.addSubstitutionMatrixValue('W','E',-3);
		matrix.addSubstitutionMatrixValue('Y','E',-2);
		matrix.addSubstitutionMatrixValue('V','E',-2);
		matrix.addSubstitutionMatrixValue('B','E',1);
		matrix.addSubstitutionMatrixValue('Z','E',4);
		matrix.addSubstitutionMatrixValue('X','E',-1);
		matrix.addSubstitutionMatrixValue('*','E',-4);
		matrix.addSubstitutionMatrixValue('A','G',0);
		matrix.addSubstitutionMatrixValue('R','G',-2);
		matrix.addSubstitutionMatrixValue('N','G',0);
		matrix.addSubstitutionMatrixValue('D','G',-1);
		matrix.addSubstitutionMatrixValue('C','G',-3);
		matrix.addSubstitutionMatrixValue('Q','G',-2);
		matrix.addSubstitutionMatrixValue('E','G',-2);
		matrix.addSubstitutionMatrixValue('G','G',6);
		matrix.addSubstitutionMatrixValue('H','G',-2);
		matrix.addSubstitutionMatrixValue('I','G',-4);
		matrix.addSubstitutionMatrixValue('L','G',-4);
		matrix.addSubstitutionMatrixValue('K','G',-2);
		matrix.addSubstitutionMatrixValue('M','G',-3);
		matrix.addSubstitutionMatrixValue('F','G',-3);
		matrix.addSubstitutionMatrixValue('P','G',-2);
		matrix.addSubstitutionMatrixValue('S','G',0);
		matrix.addSubstitutionMatrixValue('T','G',-2);
		matrix.addSubstitutionMatrixValue('W','G',-2);
		matrix.addSubstitutionMatrixValue('Y','G',-3);
		matrix.addSubstitutionMatrixValue('V','G',-3);
		matrix.addSubstitutionMatrixValue('B','G',-1);
		matrix.addSubstitutionMatrixValue('Z','G',-2);
		matrix.addSubstitutionMatrixValue('X','G',-1);
		matrix.addSubstitutionMatrixValue('*','G',-4);
		matrix.addSubstitutionMatrixValue('A','H',-2);
		matrix.addSubstitutionMatrixValue('R','H',0);
		matrix.addSubstitutionMatrixValue('N','H',1);
		matrix.addSubstitutionMatrixValue('D','H',-1);
		matrix.addSubstitutionMatrixValue('C','H',-3);
		matrix.addSubstitutionMatrixValue('Q','H',0);
		matrix.addSubstitutionMatrixValue('E','H',0);
		matrix.addSubstitutionMatrixValue('G','H',-2);
		matrix.addSubstitutionMatrixValue('H','H',8);
		matrix.addSubstitutionMatrixValue('I','H',-3);
		matrix.addSubstitutionMatrixValue('L','H',-3);
		matrix.addSubstitutionMatrixValue('K','H',-1);
		matrix.addSubstitutionMatrixValue('M','H',-2);
		matrix.addSubstitutionMatrixValue('F','H',-1);
		matrix.addSubstitutionMatrixValue('P','H',-2);
		matrix.addSubstitutionMatrixValue('S','H',-1);
		matrix.addSubstitutionMatrixValue('T','H',-2);
		matrix.addSubstitutionMatrixValue('W','H',-2);
		matrix.addSubstitutionMatrixValue('Y','H',2);
		matrix.addSubstitutionMatrixValue('V','H',-3);
		matrix.addSubstitutionMatrixValue('B','H',0);
		matrix.addSubstitutionMatrixValue('Z','H',0);
		matrix.addSubstitutionMatrixValue('X','H',-1);
		matrix.addSubstitutionMatrixValue('*','H',-4);
		matrix.addSubstitutionMatrixValue('A','I',-1);
		matrix.addSubstitutionMatrixValue('R','I',-3);
		matrix.addSubstitutionMatrixValue('N','I',-3);
		matrix.addSubstitutionMatrixValue('D','I',-3);
		matrix.addSubstitutionMatrixValue('C','I',-1);
		matrix.addSubstitutionMatrixValue('Q','I',-3);
		matrix.addSubstitutionMatrixValue('E','I',-3);
		matrix.addSubstitutionMatrixValue('G','I',-4);
		matrix.addSubstitutionMatrixValue('H','I',-3);
		matrix.addSubstitutionMatrixValue('I','I',4);
		matrix.addSubstitutionMatrixValue('L','I',2);
		matrix.addSubstitutionMatrixValue('K','I',-3);
		matrix.addSubstitutionMatrixValue('M','I',1);
		matrix.addSubstitutionMatrixValue('F','I',0);
		matrix.addSubstitutionMatrixValue('P','I',-3);
		matrix.addSubstitutionMatrixValue('S','I',-2);
		matrix.addSubstitutionMatrixValue('T','I',-1);
		matrix.addSubstitutionMatrixValue('W','I',-3);
		matrix.addSubstitutionMatrixValue('Y','I',-1);
		matrix.addSubstitutionMatrixValue('V','I',3);
		matrix.addSubstitutionMatrixValue('B','I',-3);
		matrix.addSubstitutionMatrixValue('Z','I',-3);
		matrix.addSubstitutionMatrixValue('X','I',-1);
		matrix.addSubstitutionMatrixValue('*','I',-4);
		matrix.addSubstitutionMatrixValue('A','L',-1);
		matrix.addSubstitutionMatrixValue('R','L',-2);
		matrix.addSubstitutionMatrixValue('N','L',-3);
		matrix.addSubstitutionMatrixValue('D','L',-4);
		matrix.addSubstitutionMatrixValue('C','L',-1);
		matrix.addSubstitutionMatrixValue('Q','L',-2);
		matrix.addSubstitutionMatrixValue('E','L',-3);
		matrix.addSubstitutionMatrixValue('G','L',-4);
		matrix.addSubstitutionMatrixValue('H','L',-3);
		matrix.addSubstitutionMatrixValue('I','L',2);
		matrix.addSubstitutionMatrixValue('L','L',4);
		matrix.addSubstitutionMatrixValue('K','L',-2);
		matrix.addSubstitutionMatrixValue('M','L',2);
		matrix.addSubstitutionMatrixValue('F','L',0);
		matrix.addSubstitutionMatrixValue('P','L',-3);
		matrix.addSubstitutionMatrixValue('S','L',-2);
		matrix.addSubstitutionMatrixValue('T','L',-1);
		matrix.addSubstitutionMatrixValue('W','L',-2);
		matrix.addSubstitutionMatrixValue('Y','L',-1);
		matrix.addSubstitutionMatrixValue('V','L',1);
		matrix.addSubstitutionMatrixValue('B','L',-4);
		matrix.addSubstitutionMatrixValue('Z','L',-3);
		matrix.addSubstitutionMatrixValue('X','L',-1);
		matrix.addSubstitutionMatrixValue('*','L',-4);
		matrix.addSubstitutionMatrixValue('A','K',-1);
		matrix.addSubstitutionMatrixValue('R','K',2);
		matrix.addSubstitutionMatrixValue('N','K',0);
		matrix.addSubstitutionMatrixValue('D','K',-1);
		matrix.addSubstitutionMatrixValue('C','K',-3);
		matrix.addSubstitutionMatrixValue('Q','K',1);
		matrix.addSubstitutionMatrixValue('E','K',1);
		matrix.addSubstitutionMatrixValue('G','K',-2);
		matrix.addSubstitutionMatrixValue('H','K',-1);
		matrix.addSubstitutionMatrixValue('I','K',-3);
		matrix.addSubstitutionMatrixValue('L','K',-2);
		matrix.addSubstitutionMatrixValue('K','K',5);
		matrix.addSubstitutionMatrixValue('M','K',-1);
		matrix.addSubstitutionMatrixValue('F','K',-3);
		matrix.addSubstitutionMatrixValue('P','K',-1);
		matrix.addSubstitutionMatrixValue('S','K',0);
		matrix.addSubstitutionMatrixValue('T','K',-1);
		matrix.addSubstitutionMatrixValue('W','K',-3);
		matrix.addSubstitutionMatrixValue('Y','K',-2);
		matrix.addSubstitutionMatrixValue('V','K',-2);
		matrix.addSubstitutionMatrixValue('B','K',0);
		matrix.addSubstitutionMatrixValue('Z','K',1);
		matrix.addSubstitutionMatrixValue('X','K',-1);
		matrix.addSubstitutionMatrixValue('*','K',-4);
		matrix.addSubstitutionMatrixValue('A','M',-1);
		matrix.addSubstitutionMatrixValue('R','M',-1);
		matrix.addSubstitutionMatrixValue('N','M',-2);
		matrix.addSubstitutionMatrixValue('D','M',-3);
		matrix.addSubstitutionMatrixValue('C','M',-1);
		matrix.addSubstitutionMatrixValue('Q','M',0);
		matrix.addSubstitutionMatrixValue('E','M',-2);
		matrix.addSubstitutionMatrixValue('G','M',-3);
		matrix.addSubstitutionMatrixValue('H','M',-2);
		matrix.addSubstitutionMatrixValue('I','M',1);
		matrix.addSubstitutionMatrixValue('L','M',2);
		matrix.addSubstitutionMatrixValue('K','M',-1);
		matrix.addSubstitutionMatrixValue('M','M',5);
		matrix.addSubstitutionMatrixValue('F','M',0);
		matrix.addSubstitutionMatrixValue('P','M',-2);
		matrix.addSubstitutionMatrixValue('S','M',-1);
		matrix.addSubstitutionMatrixValue('T','M',-1);
		matrix.addSubstitutionMatrixValue('W','M',-1);
		matrix.addSubstitutionMatrixValue('Y','M',-1);
		matrix.addSubstitutionMatrixValue('V','M',1);
		matrix.addSubstitutionMatrixValue('B','M',-3);
		matrix.addSubstitutionMatrixValue('Z','M',-1);
		matrix.addSubstitutionMatrixValue('X','M',-1);
		matrix.addSubstitutionMatrixValue('*','M',-4);
		matrix.addSubstitutionMatrixValue('A','F',-2);
		matrix.addSubstitutionMatrixValue('R','F',-3);
		matrix.addSubstitutionMatrixValue('N','F',-3);
		matrix.addSubstitutionMatrixValue('D','F',-3);
		matrix.addSubstitutionMatrixValue('C','F',-2);
		matrix.addSubstitutionMatrixValue('Q','F',-3);
		matrix.addSubstitutionMatrixValue('E','F',-3);
		matrix.addSubstitutionMatrixValue('G','F',-3);
		matrix.addSubstitutionMatrixValue('H','F',-1);
		matrix.addSubstitutionMatrixValue('I','F',0);
		matrix.addSubstitutionMatrixValue('L','F',0);
		matrix.addSubstitutionMatrixValue('K','F',-3);
		matrix.addSubstitutionMatrixValue('M','F',0);
		matrix.addSubstitutionMatrixValue('F','F',6);
		matrix.addSubstitutionMatrixValue('P','F',-4);
		matrix.addSubstitutionMatrixValue('S','F',-2);
		matrix.addSubstitutionMatrixValue('T','F',-2);
		matrix.addSubstitutionMatrixValue('W','F',1);
		matrix.addSubstitutionMatrixValue('Y','F',3);
		matrix.addSubstitutionMatrixValue('V','F',-1);
		matrix.addSubstitutionMatrixValue('B','F',-3);
		matrix.addSubstitutionMatrixValue('Z','F',-3);
		matrix.addSubstitutionMatrixValue('X','F',-1);
		matrix.addSubstitutionMatrixValue('*','F',-4);
		matrix.addSubstitutionMatrixValue('A','P',-1);
		matrix.addSubstitutionMatrixValue('R','P',-2);
		matrix.addSubstitutionMatrixValue('N','P',-2);
		matrix.addSubstitutionMatrixValue('D','P',-1);
		matrix.addSubstitutionMatrixValue('C','P',-3);
		matrix.addSubstitutionMatrixValue('Q','P',-1);
		matrix.addSubstitutionMatrixValue('E','P',-1);
		matrix.addSubstitutionMatrixValue('G','P',-2);
		matrix.addSubstitutionMatrixValue('H','P',-2);
		matrix.addSubstitutionMatrixValue('I','P',-3);
		matrix.addSubstitutionMatrixValue('L','P',-3);
		matrix.addSubstitutionMatrixValue('K','P',-1);
		matrix.addSubstitutionMatrixValue('M','P',-2);
		matrix.addSubstitutionMatrixValue('F','P',-4);
		matrix.addSubstitutionMatrixValue('P','P',7);
		matrix.addSubstitutionMatrixValue('S','P',-1);
		matrix.addSubstitutionMatrixValue('T','P',-1);
		matrix.addSubstitutionMatrixValue('W','P',-4);
		matrix.addSubstitutionMatrixValue('Y','P',-3);
		matrix.addSubstitutionMatrixValue('V','P',-2);
		matrix.addSubstitutionMatrixValue('B','P',-2);
		matrix.addSubstitutionMatrixValue('Z','P',-1);
		matrix.addSubstitutionMatrixValue('X','P',-2);
		matrix.addSubstitutionMatrixValue('*','P',-4);
		matrix.addSubstitutionMatrixValue('A','S',1);
		matrix.addSubstitutionMatrixValue('R','S',-1);
		matrix.addSubstitutionMatrixValue('N','S',1);
		matrix.addSubstitutionMatrixValue('D','S',0);
		matrix.addSubstitutionMatrixValue('C','S',-1);
		matrix.addSubstitutionMatrixValue('Q','S',0);
		matrix.addSubstitutionMatrixValue('E','S',0);
		matrix.addSubstitutionMatrixValue('G','S',0);
		matrix.addSubstitutionMatrixValue('H','S',-1);
		matrix.addSubstitutionMatrixValue('I','S',-2);
		matrix.addSubstitutionMatrixValue('L','S',-2);
		matrix.addSubstitutionMatrixValue('K','S',0);
		matrix.addSubstitutionMatrixValue('M','S',-1);
		matrix.addSubstitutionMatrixValue('F','S',-2);
		matrix.addSubstitutionMatrixValue('P','S',-1);
		matrix.addSubstitutionMatrixValue('S','S',4);
		matrix.addSubstitutionMatrixValue('T','S',1);
		matrix.addSubstitutionMatrixValue('W','S',-3);
		matrix.addSubstitutionMatrixValue('Y','S',-2);
		matrix.addSubstitutionMatrixValue('V','S',-2);
		matrix.addSubstitutionMatrixValue('B','S',0);
		matrix.addSubstitutionMatrixValue('Z','S',0);
		matrix.addSubstitutionMatrixValue('X','S',0);
		matrix.addSubstitutionMatrixValue('*','S',-4);
		matrix.addSubstitutionMatrixValue('A','T',0);
		matrix.addSubstitutionMatrixValue('R','T',-1);
		matrix.addSubstitutionMatrixValue('N','T',0);
		matrix.addSubstitutionMatrixValue('D','T',-1);
		matrix.addSubstitutionMatrixValue('C','T',-1);
		matrix.addSubstitutionMatrixValue('Q','T',-1);
		matrix.addSubstitutionMatrixValue('E','T',-1);
		matrix.addSubstitutionMatrixValue('G','T',-2);
		matrix.addSubstitutionMatrixValue('H','T',-2);
		matrix.addSubstitutionMatrixValue('I','T',-1);
		matrix.addSubstitutionMatrixValue('L','T',-1);
		matrix.addSubstitutionMatrixValue('K','T',-1);
		matrix.addSubstitutionMatrixValue('M','T',-1);
		matrix.addSubstitutionMatrixValue('F','T',-2);
		matrix.addSubstitutionMatrixValue('P','T',-1);
		matrix.addSubstitutionMatrixValue('S','T',1);
		matrix.addSubstitutionMatrixValue('T','T',5);
		matrix.addSubstitutionMatrixValue('W','T',-2);
		matrix.addSubstitutionMatrixValue('Y','T',-2);
		matrix.addSubstitutionMatrixValue('V','T',0);
		matrix.addSubstitutionMatrixValue('B','T',-1);
		matrix.addSubstitutionMatrixValue('Z','T',-1);
		matrix.addSubstitutionMatrixValue('X','T',0);
		matrix.addSubstitutionMatrixValue('*','T',-4);
		matrix.addSubstitutionMatrixValue('A','W',-3);
		matrix.addSubstitutionMatrixValue('R','W',-3);
		matrix.addSubstitutionMatrixValue('N','W',-4);
		matrix.addSubstitutionMatrixValue('D','W',-4);
		matrix.addSubstitutionMatrixValue('C','W',-2);
		matrix.addSubstitutionMatrixValue('Q','W',-2);
		matrix.addSubstitutionMatrixValue('E','W',-3);
		matrix.addSubstitutionMatrixValue('G','W',-2);
		matrix.addSubstitutionMatrixValue('H','W',-2);
		matrix.addSubstitutionMatrixValue('I','W',-3);
		matrix.addSubstitutionMatrixValue('L','W',-2);
		matrix.addSubstitutionMatrixValue('K','W',-3);
		matrix.addSubstitutionMatrixValue('M','W',-1);
		matrix.addSubstitutionMatrixValue('F','W',1);
		matrix.addSubstitutionMatrixValue('P','W',-4);
		matrix.addSubstitutionMatrixValue('S','W',-3);
		matrix.addSubstitutionMatrixValue('T','W',-2);
		matrix.addSubstitutionMatrixValue('W','W',11);
		matrix.addSubstitutionMatrixValue('Y','W',2);
		matrix.addSubstitutionMatrixValue('V','W',-3);
		matrix.addSubstitutionMatrixValue('B','W',-4);
		matrix.addSubstitutionMatrixValue('Z','W',-3);
		matrix.addSubstitutionMatrixValue('X','W',-2);
		matrix.addSubstitutionMatrixValue('*','W',-4);
		matrix.addSubstitutionMatrixValue('A','Y',-2);
		matrix.addSubstitutionMatrixValue('R','Y',-2);
		matrix.addSubstitutionMatrixValue('N','Y',-2);
		matrix.addSubstitutionMatrixValue('D','Y',-3);
		matrix.addSubstitutionMatrixValue('C','Y',-2);
		matrix.addSubstitutionMatrixValue('Q','Y',-1);
		matrix.addSubstitutionMatrixValue('E','Y',-2);
		matrix.addSubstitutionMatrixValue('G','Y',-3);
		matrix.addSubstitutionMatrixValue('H','Y',2);
		matrix.addSubstitutionMatrixValue('I','Y',-1);
		matrix.addSubstitutionMatrixValue('L','Y',-1);
		matrix.addSubstitutionMatrixValue('K','Y',-2);
		matrix.addSubstitutionMatrixValue('M','Y',-1);
		matrix.addSubstitutionMatrixValue('F','Y',3);
		matrix.addSubstitutionMatrixValue('P','Y',-3);
		matrix.addSubstitutionMatrixValue('S','Y',-2);
		matrix.addSubstitutionMatrixValue('T','Y',-2);
		matrix.addSubstitutionMatrixValue('W','Y',2);
		matrix.addSubstitutionMatrixValue('Y','Y',7);
		matrix.addSubstitutionMatrixValue('V','Y',-1);
		matrix.addSubstitutionMatrixValue('B','Y',-3);
		matrix.addSubstitutionMatrixValue('Z','Y',-2);
		matrix.addSubstitutionMatrixValue('X','Y',-1);
		matrix.addSubstitutionMatrixValue('*','Y',-4);
		matrix.addSubstitutionMatrixValue('A','V',0);
		matrix.addSubstitutionMatrixValue('R','V',-3);
		matrix.addSubstitutionMatrixValue('N','V',-3);
		matrix.addSubstitutionMatrixValue('D','V',-3);
		matrix.addSubstitutionMatrixValue('C','V',-1);
		matrix.addSubstitutionMatrixValue('Q','V',-2);
		matrix.addSubstitutionMatrixValue('E','V',-2);
		matrix.addSubstitutionMatrixValue('G','V',-3);
		matrix.addSubstitutionMatrixValue('H','V',-3);
		matrix.addSubstitutionMatrixValue('I','V',3);
		matrix.addSubstitutionMatrixValue('L','V',1);
		matrix.addSubstitutionMatrixValue('K','V',-2);
		matrix.addSubstitutionMatrixValue('M','V',1);
		matrix.addSubstitutionMatrixValue('F','V',-1);
		matrix.addSubstitutionMatrixValue('P','V',-2);
		matrix.addSubstitutionMatrixValue('S','V',-2);
		matrix.addSubstitutionMatrixValue('T','V',0);
		matrix.addSubstitutionMatrixValue('W','V',-3);
		matrix.addSubstitutionMatrixValue('Y','V',-1);
		matrix.addSubstitutionMatrixValue('V','V',4);
		matrix.addSubstitutionMatrixValue('B','V',-3);
		matrix.addSubstitutionMatrixValue('Z','V',-2);
		matrix.addSubstitutionMatrixValue('X','V',-1);
		matrix.addSubstitutionMatrixValue('*','V',-4);
		matrix.addSubstitutionMatrixValue('A','B',-2);
		matrix.addSubstitutionMatrixValue('R','B',-1);
		matrix.addSubstitutionMatrixValue('N','B',3);
		matrix.addSubstitutionMatrixValue('D','B',4);
		matrix.addSubstitutionMatrixValue('C','B',-3);
		matrix.addSubstitutionMatrixValue('Q','B',0);
		matrix.addSubstitutionMatrixValue('E','B',1);
		matrix.addSubstitutionMatrixValue('G','B',-1);
		matrix.addSubstitutionMatrixValue('H','B',0);
		matrix.addSubstitutionMatrixValue('I','B',-3);
		matrix.addSubstitutionMatrixValue('L','B',-4);
		matrix.addSubstitutionMatrixValue('K','B',0);
		matrix.addSubstitutionMatrixValue('M','B',-3);
		matrix.addSubstitutionMatrixValue('F','B',-3);
		matrix.addSubstitutionMatrixValue('P','B',-2);
		matrix.addSubstitutionMatrixValue('S','B',0);
		matrix.addSubstitutionMatrixValue('T','B',-1);
		matrix.addSubstitutionMatrixValue('W','B',-4);
		matrix.addSubstitutionMatrixValue('Y','B',-3);
		matrix.addSubstitutionMatrixValue('V','B',-3);
		matrix.addSubstitutionMatrixValue('B','B',4);
		matrix.addSubstitutionMatrixValue('Z','B',1);
		matrix.addSubstitutionMatrixValue('X','B',-1);
		matrix.addSubstitutionMatrixValue('*','B',-4);
		matrix.addSubstitutionMatrixValue('A','Z',-1);
		matrix.addSubstitutionMatrixValue('R','Z',0);
		matrix.addSubstitutionMatrixValue('N','Z',0);
		matrix.addSubstitutionMatrixValue('D','Z',1);
		matrix.addSubstitutionMatrixValue('C','Z',-3);
		matrix.addSubstitutionMatrixValue('Q','Z',3);
		matrix.addSubstitutionMatrixValue('E','Z',4);
		matrix.addSubstitutionMatrixValue('G','Z',-2);
		matrix.addSubstitutionMatrixValue('H','Z',0);
		matrix.addSubstitutionMatrixValue('I','Z',-3);
		matrix.addSubstitutionMatrixValue('L','Z',-3);
		matrix.addSubstitutionMatrixValue('K','Z',1);
		matrix.addSubstitutionMatrixValue('M','Z',-1);
		matrix.addSubstitutionMatrixValue('F','Z',-3);
		matrix.addSubstitutionMatrixValue('P','Z',-1);
		matrix.addSubstitutionMatrixValue('S','Z',0);
		matrix.addSubstitutionMatrixValue('T','Z',-1);
		matrix.addSubstitutionMatrixValue('W','Z',-3);
		matrix.addSubstitutionMatrixValue('Y','Z',-2);
		matrix.addSubstitutionMatrixValue('V','Z',-2);
		matrix.addSubstitutionMatrixValue('B','Z',1);
		matrix.addSubstitutionMatrixValue('Z','Z',4);
		matrix.addSubstitutionMatrixValue('X','Z',-1);
		matrix.addSubstitutionMatrixValue('*','Z',-4);
		matrix.addSubstitutionMatrixValue('A','X',0);
		matrix.addSubstitutionMatrixValue('R','X',-1);
		matrix.addSubstitutionMatrixValue('N','X',-1);
		matrix.addSubstitutionMatrixValue('D','X',-1);
		matrix.addSubstitutionMatrixValue('C','X',-2);
		matrix.addSubstitutionMatrixValue('Q','X',-1);
		matrix.addSubstitutionMatrixValue('E','X',-1);
		matrix.addSubstitutionMatrixValue('G','X',-1);
		matrix.addSubstitutionMatrixValue('H','X',-1);
		matrix.addSubstitutionMatrixValue('I','X',-1);
		matrix.addSubstitutionMatrixValue('L','X',-1);
		matrix.addSubstitutionMatrixValue('K','X',-1);
		matrix.addSubstitutionMatrixValue('M','X',-1);
		matrix.addSubstitutionMatrixValue('F','X',-1);
		matrix.addSubstitutionMatrixValue('P','X',-2);
		matrix.addSubstitutionMatrixValue('S','X',0);
		matrix.addSubstitutionMatrixValue('T','X',0);
		matrix.addSubstitutionMatrixValue('W','X',-2);
		matrix.addSubstitutionMatrixValue('Y','X',-1);
		matrix.addSubstitutionMatrixValue('V','X',-1);
		matrix.addSubstitutionMatrixValue('B','X',-1);
		matrix.addSubstitutionMatrixValue('Z','X',-1);
		matrix.addSubstitutionMatrixValue('X','X',-1);
		matrix.addSubstitutionMatrixValue('*','X',-4);
		AlignmentSystemTools.serializeSubstitutionMatrix("blosum62", matrix);
		
	}


}
